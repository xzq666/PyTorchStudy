一、加载与构建数据
1、熟悉数据。
这里加载面部及其关键点的图像并将其可视化！
这组图像数据是从YouTube Faces数据集中提取的，其中包括YouTube视频中人物的视频。这些视频已通过一些处理步骤输入，并转换为包含一个脸部和关联关键点的图像帧集。
2、训练和测试数据
该面部关键点数据集由5770幅彩色图像组成。所有这些图像都分为训练数据集或测试数据集。
其中的3462张图像是训练图像，将用于训练模型以预测关键点。另外2308张图像是测试图像，将用于测试模型的准确性。
有关此数据集中的图像和关键点的信息以CSV文件的形式汇总，可以使用pandas来读取。
读取训练集csv，得到形状为(N，2)的关键点批注，其中N是关键点的数量，2是关键点坐标的尺寸(x，y)。
3、show_keypoints函数接收图像和关键点并显示它们。请注意，这些图像的大小并非全部相同，面部也不相同。为了最终在这些图像上训练神经网络，我们需要提前对它们的形状进行标准化。
4、MyFacialKeyPointsDataset是为面部关键点数据集创建的一个数据集类。
在__init__中读取CSV文件，在__getitem__方法中读取图像。由于所有图像不会立即存储在内存中，而是根据需要读取，因此可以提高内存效率。
数据集的示例封装成字典{'image'：image，'keypoints'：key_pts}。数据集将进行可选的参数转换，以便可以将任何所需的处理应用于样本。
5、数据预处理
规范化：将彩色图像转换为[0, 1]范围的灰度值，并将关键点规范化为[-1, 1]范围。
缩放：将图像重新缩放到指定尺寸。
裁剪：随机裁剪图像。
最后，将NumPy数组的图像转换为PyTorch中所需的格式。

二、定义面部关键点检测的卷积神经网络：图像作为输入，关键点作为输出。